# Generated by Django 5.0.10 on 2025-02-07 16:29

import django.core.validators
import django.db.models.deletion
import restaurant_management.tables.enums
import restaurant_management.tables.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SeatCostSingleton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost per seat')),
            ],
            options={
                'verbose_name': 'SeatCost',
                'verbose_name_plural': 'SeatCost',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats', models.PositiveIntegerField(help_text='The number of seats at the table (must be between 4 and 10).', validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(10), restaurant_management.tables.validators.even_number_validator], verbose_name='Number of seats')),
            ],
        ),
        migrations.CreateModel(
            name='TableCountSingleton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(help_text='Enter the number of your restaurant tables.', verbose_name='Table Count')),
            ],
            options={
                'verbose_name': 'TableCount',
                'verbose_name_plural': 'TableCount',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats_reserved', models.PositiveIntegerField(default=4, validators=[django.core.validators.MaxValueValidator(10)])),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCEL', 'Cancel')], default=restaurant_management.tables.enums.ReservationStatusEnum['ACTIVE'], max_length=50, verbose_name='Reservation status')),
                ('reservation_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reservations', to=settings.AUTH_USER_MODEL, verbose_name='Reservation By')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_reservations', to='tables.table', verbose_name='Table')),
            ],
        ),
    ]
